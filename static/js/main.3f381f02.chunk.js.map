{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onSubmit","className","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","url","openModal","bigUrl","onClick","src","alt","ImageGallery","cards","map","card","image","bigImage","id","MyLoader","color","height","width","Component","Button","Modal","photo","closeModal","onKeyDown","event","keyCode","tabIndex","API_KEY","App","state","query","page","loading","endpoint","bigPhoto","handleOpenModal","setState","handleCloseModal","handleSubmit","preventDefault","target","value","handleLoadMore","a","this","fetch","response","json","data","hits","hit","webformatURL","largeImageURL","concat","console","error","length","window","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"oaAsBeA,EApBG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaD,SAAUA,EAAvC,UACE,wBAAQE,KAAK,SAASD,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mCCLPC,G,MARU,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC1C,OACE,oBAAIR,UAAU,mBAAmBS,QAASF,EAAUC,GAApD,SACE,qBAAKE,IAAKJ,EAAKK,IAAI,GAAGX,UAAU,+BCavBY,G,MAfM,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAON,EAAgB,EAAhBA,UAC7B,OACE,oBAAIP,UAAU,eAAd,SACGa,EAAMC,KAAI,SAAAC,GAAI,OACb,cAAC,EAAD,CAEET,IAAKS,EAAKC,MACVR,OAAQO,EAAKE,SACbV,UAAWA,GAHNQ,EAAKG,W,yBCJCC,E,4JACnB,WACE,OACE,cAAC,IAAD,CACElB,KAAK,OACLmB,MAAM,UACNC,OAAQ,IACRC,MAAO,U,GAPuBC,aCMvBC,G,MARA,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SAChB,OACE,wBAAQE,KAAK,SAASD,UAAU,SAASS,QAASV,EAAlD,yBCiBW0B,G,MAnBD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACtB,OACE,qBACE3B,UAAU,UACVS,QAASkB,EACTC,UAAW,SAAAC,GACa,KAAlBA,EAAMC,SACRH,KAGJI,SAAS,IARX,SAUE,qBAAK/B,UAAU,QAAf,SACE,qBAAKU,IAAKgB,EAAOf,IAAI,WCPvBqB,EAAU,qCAEHC,EAAb,4MACEC,MAAQ,CACNC,MAAO,GACPC,KAAM,EACNvB,MAAO,GACPwB,SAAS,EACTC,SAAU,GACVC,SAAU,IAPd,EAUEC,gBAAkB,SAAAd,GAAK,OAAI,WACzB,EAAKe,SAAS,CAAEF,SAAUb,MAX9B,EAcEgB,iBAAmB,WACjB,EAAKD,SAAS,CAAEF,SAAU,MAf9B,EAkBEI,aAAe,SAAAd,GACbA,EAAMe,iBAEN,EAAKH,SAAS,CAAEN,MAAON,EAAMgB,OAAO,GAAGC,MAAOV,KAAM,EAAGvB,MAAO,MArBlE,EAwBEkC,eAAiB,WACf,EAAKN,SAAS,CAAEL,KAAM,EAAKF,MAAME,KAAO,KAzB5C,8FA4BE,wCAAAY,EAAA,2DAG0BC,KAAKf,MAArBC,EAHV,EAGUA,MAAOC,EAHjB,EAGiBA,KACD,KAAVD,EAJN,wBAKUG,EALV,qCAKmDH,EALnD,iBAKiEC,EALjE,gBAK6EJ,EAL7E,wDAMIiB,KAAKR,SAAS,CAAEJ,SAAS,EAAMC,SAAUA,IAN7C,kBAQ6BY,MAAMZ,GARnC,cAQYa,EARZ,iBASyBA,EAASC,OATlC,QASYC,EATZ,OAUYxC,EAAQwC,EAAKC,KAAKxC,KAAI,SAAAyC,GAAG,MAAK,CAClCrC,GAAIqC,EAAIrC,GACRF,MAAOuC,EAAIC,aACXvC,SAAUsC,EAAIE,kBAEhBR,KAAKR,SAAS,CAAE5B,MAAOoC,KAAKf,MAAMrB,MAAM6C,OAAO7C,KAfrD,kDAiBM8C,QAAQC,MAAR,MAjBN,yBAmBMX,KAAKR,SAAS,CAAEJ,SAAS,IAnB/B,6EA5BF,0EAoDE,WACE,OACE,sBAAKrC,UAAU,MAAf,UACE,cAAC,EAAD,CAAWD,SAAUkD,KAAKN,eACzBM,KAAKf,MAAMG,QACV,cAAC,EAAD,IAEA,cAAC,EAAD,CACExB,MAAOoC,KAAKf,MAAMrB,MAClBN,UAAW0C,KAAKT,kBAGnBS,KAAKf,MAAMrB,MAAMgD,OAAS,GACzB,cAAC,EAAD,CAAQ9D,SAAUkD,KAAKF,iBAEA,KAAxBE,KAAKf,MAAMK,UACV,cAAC,EAAD,CACEb,MAAOuB,KAAKf,MAAMK,SAClBZ,WAAYsB,KAAKP,wBAtE7B,uEA6EE,wCAAAM,EAAA,2DAG0BC,KAAKf,MAArBC,EAHV,EAGUA,MAAOC,EAHjB,EAGiBA,MACTE,EAJR,qCAIiDH,EAJjD,iBAI+DC,EAJ/D,gBAI2EJ,EAJ3E,2DAKmBiB,KAAKf,MAAMI,SAL9B,wBAMIW,KAAKR,SAAS,CAAEJ,SAAS,EAAMC,SAAUA,IAN7C,kBAQ6BY,MAAMZ,GARnC,cAQYa,EARZ,iBASyBA,EAASC,OATlC,QASYC,EATZ,OAUYxC,EAAQwC,EAAKC,KAAKxC,KAAI,SAAAyC,GAAG,MAAK,CAClCrC,GAAIqC,EAAIrC,GACRF,MAAOuC,EAAIC,aACXvC,SAAUsC,EAAIE,kBAEhBR,KAAKR,SAAS,CAAE5B,MAAOoC,KAAKf,MAAMrB,MAAM6C,OAAO7C,KAfrD,kDAiBM8C,QAAQC,MAAR,MAjBN,yBAmBMX,KAAKR,SAAS,CAAEJ,SAAS,IAnB/B,qBAsBEyB,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,WAxBd,gEA7EF,2DAAyB7C,aCLzB8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,SAASO,eAAe,W","file":"static/js/main.3f381f02.chunk.js","sourcesContent":["import './Searchbar.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ url, openModal, bigUrl }) => {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={openModal(bigUrl)}>\n      <img src={url} alt=\"\" className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nconst ImageGallery = ({ cards, openModal }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {cards.map(card => (\n        <ImageGalleryItem\n          key={card.id}\n          url={card.image}\n          bigUrl={card.bigImage}\n          openModal={openModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nexport default class MyLoader extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={500}\n        width={500}\n        /*timeout={3000}*/\n      />\n    );\n  }\n}\n","import './Button.css';\n\nconst Button = ({ onSubmit }) => {\n  return (\n    <button type=\"submit\" className=\"Button\" onClick={onSubmit}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","import './Modal.css';\n\nconst Modal = ({ photo, closeModal }) => {\n  return (\n    <div\n      className=\"Overlay\"\n      onClick={closeModal}\n      onKeyDown={event => {\n        if (event.keyCode === 27) {\n          closeModal();\n        }\n      }}\n      tabIndex=\"0\"\n    >\n      <div className=\"Modal\">\n        <img src={photo} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport MyLoader from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nconst API_KEY = '21312315-f1f0be60f3efa7b19271edd39';\n\nexport class App extends Component {\n  state = {\n    query: '',\n    page: 1,\n    cards: [],\n    loading: false,\n    endpoint: '',\n    bigPhoto: '',\n  };\n\n  handleOpenModal = photo => () => {\n    this.setState({ bigPhoto: photo });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ bigPhoto: '' });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    /*console.log('Submit');*/\n    this.setState({ query: event.target[1].value, page: 1, cards: [] });\n  };\n\n  handleLoadMore = () => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  async componentDidMount() {\n    /*console.log('Mount, page:');\n    console.log(this.state.page);*/\n    const { query, page } = this.state;\n    if (query !== '') {\n      const endpoint = `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n      this.setState({ loading: true, endpoint: endpoint });\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        const cards = data.hits.map(hit => ({\n          id: hit.id,\n          image: hit.webformatURL,\n          bigImage: hit.largeImageURL,\n        }));\n        this.setState({ cards: this.state.cards.concat(cards) });\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSubmit} />\n        {this.state.loading ? (\n          <MyLoader />\n        ) : (\n          <ImageGallery\n            cards={this.state.cards}\n            openModal={this.handleOpenModal}\n          />\n        )}\n        {this.state.cards.length > 0 && (\n          <Button onSubmit={this.handleLoadMore} />\n        )}\n        {this.state.bigPhoto !== '' && (\n          <Modal\n            photo={this.state.bigPhoto}\n            closeModal={this.handleCloseModal}\n          />\n        )}\n      </div>\n    );\n  }\n\n  async componentDidUpdate() {\n    /*console.log('Update, page:');\n    console.log(this.state.page);*/\n    const { query, page } = this.state;\n    const endpoint = `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n    if (endpoint !== this.state.endpoint) {\n      this.setState({ loading: true, endpoint: endpoint });\n      try {\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        const cards = data.hits.map(hit => ({\n          id: hit.id,\n          image: hit.webformatURL,\n          bigImage: hit.largeImageURL,\n        }));\n        this.setState({ cards: this.state.cards.concat(cards) });\n      } catch (error) {\n        console.error(error);\n      } finally {\n        this.setState({ loading: false });\n      }\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}