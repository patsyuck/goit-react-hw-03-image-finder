{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","onSubmit","className","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","url","openModal","bigUrl","onClick","src","alt","ImageGallery","cards","map","card","image","bigImage","id","MyLoader","color","height","width","Component","Button","Modal","fn","photo","closeModal","onKeyDown","event","code","tabIndex","API_KEY","App","state","query","page","loading","endpoint","isOpenModal","bigPhoto","handleOpenModal","setState","handleCloseModal","handleSubmit","preventDefault","target","value","handleLoadMore","a","this","fetch","response","json","data","hits","hit","webformatURL","largeImageURL","console","error","handleRequest","length","window","scrollTo","top","document","documentElement","scrollHeight","behavior","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05ac58a1.chunk.js","sourcesContent":["import './Searchbar.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={onSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n","import './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ url, openModal, bigUrl }) => {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={openModal(bigUrl)}>\n      <img src={url} alt=\"\" className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport './ImageGallery.css';\n\nconst ImageGallery = ({ cards, openModal }) => {\n  return (\n    <ul className=\"ImageGallery\">\n      {cards.map(card => (\n        <ImageGalleryItem\n          key={card.id}\n          url={card.image}\n          bigUrl={card.bigImage}\n          openModal={openModal}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\n\nexport default class MyLoader extends Component {\n  render() {\n    return (\n      <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={500}\n        width={500}\n        /*timeout={3000}*/\n      />\n    );\n  }\n}\n","import './Button.css';\n\nconst Button = ({ onSubmit }) => {\n  return (\n    <button type=\"submit\" className=\"Button\" onClick={onSubmit}>\n      Load more\n    </button>\n  );\n};\n\nexport default Button;\n","import './Modal.css';\n\nconst decor = fn => event => {\n  if (event.code === 'Escape') {\n    fn();\n  }\n};\n\nconst Modal = ({ photo, closeModal }) => {\n  return (\n    <div\n      className=\"Overlay\"\n      onClick={closeModal}\n      onKeyDown={decor(closeModal)}\n      tabIndex=\"0\"\n    >\n      <div className=\"Modal\">\n        <img src={photo} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Searchbar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport MyLoader from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport Modal from './components/Modal/Modal';\n\nconst API_KEY = '21312315-f1f0be60f3efa7b19271edd39';\n\nexport class App extends Component {\n  state = {\n    query: '',\n    page: 1,\n    cards: [],\n    loading: false,\n    endpoint: '',\n    isOpenModal: false,\n    bigPhoto: '',\n  };\n\n  handleOpenModal = photo => () => {\n    this.setState({ bigPhoto: photo, isOpenModal: true });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ bigPhoto: '', isOpenModal: false });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.setState({ query: event.target[1].value, page: 1, cards: [] });\n  };\n\n  handleLoadMore = () => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  async handleRequest(endpoint) {\n    this.setState({ loading: true, endpoint: endpoint });\n    try {\n      const response = await fetch(endpoint);\n      const data = await response.json();\n      const cards = data.hits.map(hit => ({\n        id: hit.id,\n        image: hit.webformatURL,\n        bigImage: hit.largeImageURL,\n      }));\n      this.setState({ cards: [...this.state.cards, ...cards] });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  async componentDidMount() {\n    const { query, page } = this.state;\n    if (query !== '') {\n      const endpoint = `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n      this.handleRequest(endpoint);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSubmit} />\n        {this.state.loading ? (\n          <MyLoader />\n        ) : (\n          <ImageGallery\n            cards={this.state.cards}\n            openModal={this.handleOpenModal}\n          />\n        )}\n        {this.state.cards.length > 0 && (\n          <Button onSubmit={this.handleLoadMore} />\n        )}\n        {this.state.isOpenModal === true && (\n          <Modal\n            photo={this.state.bigPhoto}\n            closeModal={this.handleCloseModal}\n          />\n        )}\n      </div>\n    );\n  }\n\n  async componentDidUpdate() {\n    const { query, page } = this.state;\n    const endpoint = `https://pixabay.com/api/?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n    if (endpoint !== this.state.endpoint) {\n      this.handleRequest(endpoint);\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}